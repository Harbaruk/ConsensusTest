// <auto-generated />
using ConsensusTester.DataAccess.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using System;

namespace ConsensusTester.DataAccess.Migrations
{
    [DbContext(typeof(ConsensusContext))]
    [Migration("20180518125457_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.3-rtm-10026")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ConsensusTester.DataAccess.Entities.BlockEntity", b =>
                {
                    b.Property<string>("Hash")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("BlockState")
                        .IsRequired();

                    b.Property<DateTimeOffset>("Date");

                    b.Property<string>("Miner")
                        .IsRequired();

                    b.Property<long>("Nonce");

                    b.Property<string>("PreviousBlockHash")
                        .IsRequired();

                    b.HasKey("Hash");

                    b.ToTable("Blocks");
                });

            modelBuilder.Entity("ConsensusTester.DataAccess.Entities.TransactionEntity", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("BlockHash");

                    b.Property<DateTimeOffset>("Date");

                    b.Property<string>("Description");

                    b.Property<string>("Owner")
                        .IsRequired();

                    b.Property<string>("State");

                    b.HasKey("Id");

                    b.HasIndex("BlockHash");

                    b.ToTable("TransactionEntity");
                });

            modelBuilder.Entity("ConsensusTester.DataAccess.Entities.TransactionEntity", b =>
                {
                    b.HasOne("ConsensusTester.DataAccess.Entities.BlockEntity", "Block")
                        .WithMany("Transactions")
                        .HasForeignKey("BlockHash")
                        .OnDelete(DeleteBehavior.Restrict);
                });
#pragma warning restore 612, 618
        }
    }
}
